diff a/src/App.test.js b/src/App.test.js	(rejected hunks)
@@ -1,61 +1,13 @@
-import {
-  render, screen, fireEvent, waitFor, test, expect,
-} from '@testing-library/react';
-import { BrowserRouter as Router } from 'react-router-dom';
-import BookingForm from './components/BookingForm';
+import { render, screen } from '@testing-library/react';
+import BookingForm from './components/BookingFrom';
 import { initialState } from './utilities/testFunction';
 
 test('Renders the BookingForm heading', () => {
-  render(
-    <Router>
-      <BookingForm />
-    </Router>,
-  );
-  const headingElement = screen.getByText('First Name');
+  render(<BookingForm />);
+  const headingElement = screen.getByText('choose date');
   expect(headingElement).toBeInTheDocument();
 });
 
 test('initializeTimes eturns the correct expected value', () => {
   expect(typeof initialState()).toEqual('object');
 });
-
-test('shows an error message when firstName is not filled in', async () => {
-  render(
-    <Router>
-      <BookingForm />
-    </Router>,
-  );
-
-  const inputElement = screen.getByTestId('firstName');
-  fireEvent.blur(inputElement);
-
-  expect(await screen.findByText('*Required')).toBeInTheDocument();
-});
-
-test('shows an div with error class when firstName is not filled in', () => {
-  render(
-    <Router>
-      <BookingForm />
-    </Router>,
-  );
-  const input = screen.getByTestId('email-field');
-  fireEvent.blur(input);
-  waitFor(() => {
-    expect(screen.getByTestId('email-error')).toBeInTheDocument();
-  });
-});
-
-test('shows no error when input is just clicked', async () => {
-  render(
-    <Router>
-      <BookingForm />
-    </Router>,
-  );
-  const input = screen.getByTestId('lastName');
-  fireEvent.click(input);
-  await waitFor(() => {
-    const errorDiv = screen.queryByTestId('lastName-error');
-    // console.log(errorDiv.outerHTML);
-    expect(errorDiv).not.toBeInTheDocument();
-  });
-});
